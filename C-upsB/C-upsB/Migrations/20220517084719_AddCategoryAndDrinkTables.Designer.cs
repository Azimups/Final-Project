// <auto-generated />
using C_upsB.DataAccesLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace C_upsB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220517084719_AddCategoryAndDrinkTables")]
    partial class AddCategoryAndDrinkTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("C_upsB.Models.AboutDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FounderImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FounderStory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutDetails");
                });

            modelBuilder.Entity("C_upsB.Models.AboutImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutLittleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutMainImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutImages");
                });

            modelBuilder.Entity("C_upsB.Models.AboutTexts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTextFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutTextSecond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreHeader")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutTexts");
                });

            modelBuilder.Entity("C_upsB.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BtnText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedDrinkFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedDrinkSecond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedDrinkThird")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("C_upsB.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("Description")
                        .HasColumnType("float");

                    b.Property<string>("InformationHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalCalories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalCholesterol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalSodium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalTotalCarbs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalTotalFat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalTotalFiber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalTotalProtein")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalTotalSugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLCalories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLCholesterol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLSodium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLTotalCarbs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLTotalFat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLTotalFiber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLTotalProtein")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeLTotalSugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMCalories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMCholesterol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMSodium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMTotalCarbs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMTotalFat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMTotalFiber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMTotalProtein")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeMTotalSugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSCalories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSCholesterol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSSodium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSTotalCarbs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSTotalFat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSTotalFiber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSTotalProtein")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeSTotalSugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeSecond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeThird")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("C_upsB.Models.Stylish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdHeader")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stylish");
                });

            modelBuilder.Entity("C_upsB.Models.Drink", b =>
                {
                    b.HasOne("C_upsB.Models.Category", "Category")
                        .WithMany("Drinks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("C_upsB.Models.Category", b =>
                {
                    b.Navigation("Drinks");
                });
#pragma warning restore 612, 618
        }
    }
}
